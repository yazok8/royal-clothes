{"version":3,"sources":["components/menu-item/menu-item.styles.jsx","components/menu-item/menu-item.component.jsx","redux/directory/directory.selector.js","components/directory/directory.styles.jsx","components/directory/directory.component.jsx","pages/homepage/homepage.styles.jsx","pages/homepage/homepage.component.jsx"],"names":["MenuItemContainer","styled","div","size","BackgroundImageContainer","imageUrl","ContentContainer","ContentTitle","span","ContentSubtitle","withRouter","title","history","linkUrl","match","onClick","push","url","style","backgroundImage","toUpperCase","selectDirectorySections","createSelector","state","directory","sections","DirectoryMenuContainer","mapStateToProps","createStructuredSelector","connect","map","id","otherSectionProps","key","HomePageContainer","Homepage","onRender","phase","actualDuration","console","log"],"mappings":"8LAEaA,EAAoBC,IAAOC,IAAV,0nBAClB,qBAAGC,KAAmB,QAAU,WAgC/BC,EAA2BH,IAAOC,IAAV,kJAKf,gBAAGG,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAAmBL,IAAOC,IAAV,kQAahBK,EAAeN,IAAOO,KAAV,gHAOZC,EAAkBR,IAAOO,KAAV,yECjCbE,eAjBC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAON,EAAT,EAASA,SAAUF,EAAnB,EAAmBA,KAAMS,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,QAAQC,EAA1C,EAA0CA,MAA1C,OAGZ,kBAACd,EAAD,CAAmBG,KAAMA,EAAMY,QAAS,kBAAIH,EAAQI,KAAR,UAAgBF,EAAMG,KAAtB,OAA4BJ,MAGxE,kBAACT,EAAD,CAA0Bc,MAAQ,CAACC,gBAAgB,OAAD,OAASd,EAAT,QAGlD,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAeI,EAAMS,eACrB,kBAACX,EAAD,sB,gBCnBKY,EAAyBC,YAClC,CAHmB,SAAAC,GAAK,OAAIA,EAAMC,aAIlC,SAAAA,GAAS,OAAIA,EAAUC,YCJdC,EAAyBzB,IAAOC,IAAV,yH,SCkB7ByB,EAAiBC,YAAyB,CAC9CH,SAASJ,IAGIQ,cAAQF,EAARE,EAhBE,SAAC,GAAD,IAAEJ,EAAF,EAAEA,SAAF,OAEf,kBAACC,EAAD,KAGMD,EAASK,KAAI,gBAAEC,EAAF,EAAEA,GAAOC,EAAT,wBACX,kBAAC,EAAD,eAAUC,IAAKF,GAAOC,WCbnBE,EAAoBjC,IAAOC,IAAV,oHCuBfiC,UAnBE,kBAEb,kBAACD,EAAD,KACI,kBAAC,WAAD,CAAUH,GAAG,YACbK,SAAU,SAACL,EAAIM,EAAOC,GAClBC,QAAQC,IAAI,CACRT,KACAM,QACAC,qBAKR,kBAAC,EAAD","file":"static/js/9.db9d151f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MenuItemContainer = styled.div`\n  height: ${({ size }) => (size ? '380px' : '240px')};\n  min-width: 30%;\n  overflow: hidden;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  margin: 0 7.5px 15px;\n  overflow: hidden;\n  &:hover {\n    cursor: pointer;\n    & .background-image {\n      transform: scale(1.1);\n      transition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n    }\n    & .content {\n      opacity: 0.9;\n    }\n  }\n  &:first-child {\n    margin-right: 7.5px;\n  }\n  &:last-child {\n    margin-left: 7.5px;\n  }\n\n  @media screen and (max-width: 800px) {\n    height: 200px;\n  }\n`;\n\nexport const BackgroundImageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const ContentContainer = styled.div`\n  height: 90px;\n  padding: 0 25px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  background-color: white;\n  opacity: 0.7;\n  position: absolute;\n`;\n\nexport const ContentTitle = styled.span`\n  font-weight: bold;\n  margin-bottom: 6px;\n  font-size: 22px;\n  color: #4a4a4a;\n`;\n\nexport const ContentSubtitle = styled.span`\n  font-weight: lighter;\n  font-size: 16px;\n`;\n","\nimport React from \"react\"; \nimport {withRouter} from \"react-router-dom\";\nimport {\n    MenuItemContainer,\n    BackgroundImageContainer,\n    ContentContainer,\n    ContentTitle,\n    ContentSubtitle\n  } from './menu-item.styles';\n\n\n//we will use the match to know where in our directory we will be. \nconst MenuItem= ({title, imageUrl, size, history, linkUrl,match})=>(\n\n   \n    <MenuItemContainer size={size} onClick={()=>history.push(`${match.url}${linkUrl}`)}>\n\n\n    <BackgroundImageContainer style= {{backgroundImage: `url(${imageUrl})`\n    }}/>\n\n    <ContentContainer>\n        <ContentTitle>{title.toUpperCase()}</ContentTitle>\n        <ContentSubtitle>Shop now</ContentSubtitle>\n    </ContentContainer>\n</MenuItemContainer>\n    \n)\n\nexport default withRouter(MenuItem);","import {createSelector} from \"reselect\"; \n\n\nconst selectDirectory= state => state.directory;\n \nexport const selectDirectorySections= createSelector(\n    [selectDirectory], \n    directory => directory.sections\n)","\nimport styled from 'styled-components';\n\nexport const DirectoryMenuContainer = styled.div`\nwidth: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;","import React from \"react\"; \nimport MenuItem from \"../menu-item/menu-item.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport {connect} from \"react-redux\"; \nimport {selectDirectorySections} from \"../../redux/directory/directory.selector\"\nimport {DirectoryMenuContainer} from \"./directory.styles\";\n\n\n\nconst Directory= ({sections})=> (\n\n  <DirectoryMenuContainer>\n  \n  {/* otherSectionProps = title, imageUrl,id, size, linkUrl */}\n      { sections.map(({id, ...otherSectionProps})=>(\n          <MenuItem key={id}{...otherSectionProps} />\n      ))}\n\n          </DirectoryMenuContainer>\n); \n\nconst mapStateToProps= createStructuredSelector({\n  sections:selectDirectorySections\n})\n\nexport default connect(mapStateToProps)(Directory); ","import styled from \"styled-components\";\n\nexport const HomePageContainer = styled.div`\n\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\npadding: 20px 20px;\n\n`;","import React, {Profiler} from \"react\"; \nimport Directory from \"../../components/directory/directory.component\"; \nimport {HomePageContainer} from \"./homepage.styles\";\n\n\n\nconst Homepage = ()=>(\n\n    <HomePageContainer>\n        <Profiler id=\"Directory\" \n        onRender={(id, phase, actualDuration)=>{\n            console.log({\n                id,\n                phase, \n                actualDuration\n            })\n\n        }}>\n\n        <Directory/>\n\n        </Profiler>\n    </HomePageContainer>\n)\n\nexport default Homepage; "],"sourceRoot":""}
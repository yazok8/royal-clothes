{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.js","pages/collection/collection.container.jsx","redux/shop/shop.selector.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageConatiner","styled","div","CollectionTitle","h2","CollectionItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","CollectionPageContainer","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","collectionUrlParam","selectIsCollectionsFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"8MAEaA,EAA0BC,IAAOC,IAAV,yEAKvBC,EAAkBF,IAAOG,GAAV,wEAKfC,EAA2BJ,IAAOC,IAAV,uT,QCsBtBI,eANS,SAACC,EAAOC,GAAR,MAAqB,CAEzCC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAItDD,EA1BO,SAAC,GAAiB,IAAhBG,EAAe,EAAfA,WAEbK,EAAcL,EAAdK,MAAOC,EAAON,EAAPM,MAElB,OAEI,kBAACf,EAAD,KACI,kBAACG,EAAD,KAAkBW,GAClB,kBAACT,EAAD,KAEQU,EAAMC,KAAI,SAAAC,GAAI,OAAK,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,YCXjEG,EAAiBC,YAAyB,CAC5CC,UAAW,SAAAf,GAAK,OAAGgB,YAA0BhB,MAG3CiB,EAA0BC,YAC5BnB,YAAQc,GACRM,IAF4BD,CAI/BE,GAEcH,a,gCCjBf,oJAIMI,EAAa,SAAArB,GAAK,OAAIA,EAAMsB,MAErBC,EAAmBC,YAC5B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OACXA,EAAcE,OAAOC,KAAKH,GAAahB,KAAI,SAAAE,GAAG,OAAIc,EAAYd,MAAQ,MAG7DR,EAAmB,SAAA0B,GAAkB,OAClDL,YACI,CAACD,IACD,SAAAE,GAAW,OACXA,EAAYA,EAAYI,GAAoB,SAGnCC,EAA8BN,YACvC,CAACH,IACD,SAAAC,GAAI,OAAEA,EAAKS,cAGFf,EAA2BQ,YAEpC,CAACH,IACD,SAAAC,GAAI,QAAIA,EAAKG,gB,oFCpBFN,IARG,SAAAa,GAAgB,OAAG,YAA+B,IAA7BjB,EAA4B,EAA5BA,UAAckB,EAAc,iBAEnE,OAAOlB,EACL,kBAAC,IAAD,MACE,kBAACiB,EAAqBC,M,uGCLbC,EAA0BxC,IAAOC,IAAV,2dAgCvBwC,EAAYzC,YAAO0C,IAAP1C,CAAH,0PAeT2C,EAAkB3C,IAAOC,IAAV,iWAMN,gBAAG2C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAgBTC,EAA4B7C,IAAOC,IAAV,oIAQzB6C,EAAgB9C,IAAO+C,KAAV,mEAKbC,EAAiBhD,IAAO+C,KAAV,iEC/CZ1C,gBAAQ,MANE,SAAA4C,GAAQ,MAAI,CAEjCC,QAAS,SAAAlC,GAAI,OAAGiC,EAASC,YAAQlC,QAItBX,EA3BO,SAAC,GAAoB,IAAlBW,EAAiB,EAAjBA,KAAKkC,EAAY,EAAZA,QAGnBC,EAAwBnC,EAAxBmC,KAAMC,EAAkBpC,EAAlBoC,MAAOR,EAAW5B,EAAX4B,SAEpB,OACJ,kBAACJ,EAAD,KAEA,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IACrC,kBAACC,EAAD,KACG,kBAACC,EAAD,KAAgBK,GACf,kBAACH,EAAD,KAAiBI,IAIrB,kBAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQlC,IAAOuC,UAAQ,GAAjD","file":"static/js/5.47930e6e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPageConatiner = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & .collection-item {\n    margin-bottom: 30px;\n    width: 400px;\n  }\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 100x;\n  }\n`;\n","import React from \"react\"; \n\nimport {connect} from \"react-redux\"; \nimport {selectCollection} from \"../../redux/shop/shop.selector\";\nimport {CollectionPageConatiner,CollectionItemsContainer,CollectionTitle} from \"./collection.styles\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\"\n\n\nconst CollectionPage= ({collection})=> {\n\n    const {title, items}=collection; \n\nreturn(\n\n    <CollectionPageConatiner>\n        <CollectionTitle>{title}</CollectionTitle>\n        <CollectionItemsContainer>\n            {\n                items.map(item =>( <CollectionItem key={item.id} item={item}/>\n                )\n            )\n        }\n        </CollectionItemsContainer>\n   </CollectionPageConatiner>\n);\n\n};\n\nconst mapStateToProps = (state, ownProps) =>({\n\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n\n})\n\nexport default connect(mapStateToProps)(CollectionPage); \n","import {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectIsCollectionsLoaded} from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionPage from \"./collection.component\"; \n\nconst mapStateToProps= createStructuredSelector({\n    isLoading: state=>!selectIsCollectionsLoaded(state)\n})\n\nconst CollectionPageContainer = compose (\n    connect(mapStateToProps),\n    WithSpinner\n)\n(CollectionPage);\n\nexport default CollectionPageContainer;\n","import {createSelector} from \"reselect\"; \n\n\n\nconst selectShop = state => state.shop; \n\nexport const selectCollections= createSelector (\n    [selectShop], \n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections=>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectCollection = collectionUrlParam => \ncreateSelector(\n    [selectCollections], \n    collections => \n    collections?collections[collectionUrlParam]:null\n)\n\nexport const selectIsCollectionsFetching = createSelector(\n    [selectShop],\n    shop=>shop.isFetching\n); \n\nexport const selectIsCollectionsLoaded= createSelector(\n\n    [selectShop], \n    shop=>!!shop.collections\n)","import React from \"react\"; \n\nimport Spinner from \"../spinner/spinner.component\";\n\nconst WithSpinner=WrappedComponent =>({isLoading, ...otherProps})=>{\n\nreturn isLoading ?\n (<Spinner/>):(\n    <WrappedComponent {...otherProps}/>\n  );\n};\n\nexport default WithSpinner; ","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n      button {\n        // opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n    }\n    button {\n      opacity: unset;\n    }\n  }\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cart.action\"\nimport {PriceContainer,\n     NameContainer,\n      CollectionFooterContainer, \n      BackgroundImage, \n      AddButton, \n      CollectionItemContainer} \n      from \"./collection-item.styles\"\n//functional component\nconst CollectionItem= ({ item,addItem })=>{\n\n    //distructure these properties from the item instead of props  \n    const {name, price, imageUrl}= item;\n\n    return (\n<CollectionItemContainer>\n\n<BackgroundImage className='image' imageUrl={imageUrl} />\n        <CollectionFooterContainer>\n           <NameContainer>{name}</NameContainer>\n            <PriceContainer>{price}</PriceContainer>\n\n        </CollectionFooterContainer>  \n\n        <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n</CollectionItemContainer>\n\n    )}\nconst mapDispatchToProps=dispatch =>({\n\n    addItem: item =>dispatch(addItem(item))\n})\n\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}
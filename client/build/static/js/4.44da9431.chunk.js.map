{"version":3,"sources":["components/collection-overview/collection-overview.styles.jsx","components/preview-collection/preview-collection.styles.jsx","components/preview-collection/preview-collection.component.jsx","components/collection-overview/collection-overview.component.jsx","components/collection-overview/collection-overview.container.jsx","redux/shop/shop.selector.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionOverviewContainer","styled","div","CollectionPreviewContainer","TitleContainer","h1","PreviewContainer","CollectionPrev","title","items","toUpperCase","filter","item","idx","map","key","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","mapStateToProp","isLoading","selectIsCollectionsFetching","CollectionsOverviewContainer","compose","WithSpinner","collectionOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"wNAEaA,EAA6BC,IAAOC,IAAT,sECA3BC,EAA6BF,IAAOC,IAAV,4KAU1BE,EAAiBH,IAAOI,GAAV,gIASdC,EAAmBL,IAAOC,IAAV,gN,QCAdK,EAjBQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,OAEnB,kBAACN,EAAD,KAEI,kBAACC,EAAD,KAAiBI,EAAME,eACvB,kBAACJ,EAAD,KAIQG,EAAME,QAAO,SAACC,EAAMC,GAAP,OAAcA,EAAK,KAC/BC,KAAI,SAACF,GAAD,OACD,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,U,SCIlDK,EAAkBC,YAAyB,CAC7CC,YAAaC,MAGFC,cAAQJ,EAARI,EAdW,SAAC,GAAD,IAAEF,EAAF,EAAEA,YAAF,OACtB,kBAACnB,EAAD,KAESmB,EAAYL,KAAI,gBAAEE,EAAF,EAAEA,GAAOM,EAAT,wBACb,kBAAC,EAAD,eAAgBP,IAAKC,GAAQM,WCLvCC,EAAeL,YAAyB,CAC1CM,UAAWC,MAITC,EAA8BC,YAEhCN,YAAQE,GACRK,IAHgCD,CAI3BE,GAEMH,a,gCCnBf,oJAIMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAmBC,YAC5B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKb,eAGJC,EAA8Bc,YACvC,CAACD,IACD,SAAAd,GAAW,OACXA,EAAcgB,OAAOC,KAAKjB,GAAaL,KAAI,SAAAC,GAAG,OAAII,EAAYJ,MAAQ,MAG7DsB,EAAmB,SAAAC,GAAkB,OAClDJ,YACI,CAACD,IACD,SAAAd,GAAW,OACXA,EAAYA,EAAYmB,GAAoB,SAGnCb,EAA8BS,YACvC,CAACJ,IACD,SAAAE,GAAI,OAAEA,EAAKO,cAGFC,EAA2BN,YAEpC,CAACJ,IACD,SAAAE,GAAI,QAAIA,EAAKb,gB,oFCpBFS,IARG,SAAAa,GAAgB,OAAG,YAA+B,IAA7BjB,EAA4B,EAA5BA,UAAckB,EAAc,iBAEnE,OAAOlB,EACL,kBAAC,IAAD,MACE,kBAACiB,EAAqBC,M,uGCLbC,EAA0B1C,IAAOC,IAAV,2dAgCvB0C,EAAY3C,YAAO4C,IAAP5C,CAAH,0PAeT6C,EAAkB7C,IAAOC,IAAV,iWAMN,gBAAG6C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAgBTC,EAA4B/C,IAAOC,IAAV,oIAQzB+C,EAAgBhD,IAAOiD,KAAV,mEAKbC,EAAiBlD,IAAOiD,KAAV,iEC/CZ7B,gBAAQ,MANE,SAAA+B,GAAQ,MAAI,CAEjCC,QAAS,SAAAzC,GAAI,OAAGwC,EAASC,YAAQzC,QAItBS,EA3BO,SAAC,GAAoB,IAAlBT,EAAiB,EAAjBA,KAAKyC,EAAY,EAAZA,QAGnBC,EAAwB1C,EAAxB0C,KAAMC,EAAkB3C,EAAlB2C,MAAOR,EAAWnC,EAAXmC,SAEpB,OACJ,kBAACJ,EAAD,KAEA,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IACrC,kBAACC,EAAD,KACG,kBAACC,EAAD,KAAgBK,GACf,kBAACH,EAAD,KAAiBI,IAIrB,kBAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQzC,IAAO8C,UAAQ,GAAjD","file":"static/js/4.44da9431.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CollectionOverviewContainer= styled.div`\ndisplay: flex; \nflex-direction: column;\n`;","import styled from 'styled-components';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  margin-bottom: 25px;\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 30px;\n  }\n`;\n","import React from \"react\"; \nimport {CollectionPreviewContainer,TitleContainer, PreviewContainer } from \"./preview-collection.styles\";\nimport CollectionItem from \"../collection-item/collection-item.component\"\n\nconst CollectionPrev = ({title, items})=>(\n\n    <CollectionPreviewContainer>\n\n        <TitleContainer>{title.toUpperCase()}</TitleContainer>\n        <PreviewContainer>\n\n            {\n                //we use the filter to show only 4 items.\n                items.filter((item, idx)=> idx <4)\n                .map((item)=>(\n                    <CollectionItem key={item.id} item={item}/>\n                ))}\n        </PreviewContainer>\n    </CollectionPreviewContainer>\n)\n\nexport default CollectionPrev; \n\n","import React from \"react\"; \nimport { connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";  \nimport {CollectionOverviewContainer} from \"./collection-overview.styles\";\n\nimport CollectionPrev from \"../../components/preview-collection/preview-collection.component\";\nimport { selectCollectionsForPreview} from \"../../redux/shop/shop.selector\";\n\n\nconst collectionOverview= ({collections}) =>(\n    <CollectionOverviewContainer>\n                {/* //otherCollectionProps are the titles and items of each item */}\n            {collections.map(({id, ...otherCollectionProps}) => (\n                <CollectionPrev key={id} {...otherCollectionProps}/>\n            ))\n            }\n    </CollectionOverviewContainer>\n); \n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(collectionOverview)","import {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectIsCollectionsFetching} from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport collectionOverview from \"./collection-overview.component\";\n\n\nconst mapStateToProp=createStructuredSelector({\n    isLoading: selectIsCollectionsFetching\n});\n\n\nconst CollectionsOverviewContainer= compose (\n\n    connect(mapStateToProp),\n    WithSpinner\n    )   (collectionOverview);\n\nexport default CollectionsOverviewContainer;","import {createSelector} from \"reselect\"; \n\n\n\nconst selectShop = state => state.shop; \n\nexport const selectCollections= createSelector (\n    [selectShop], \n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections=>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectCollection = collectionUrlParam => \ncreateSelector(\n    [selectCollections], \n    collections => \n    collections?collections[collectionUrlParam]:null\n)\n\nexport const selectIsCollectionsFetching = createSelector(\n    [selectShop],\n    shop=>shop.isFetching\n); \n\nexport const selectIsCollectionsLoaded= createSelector(\n\n    [selectShop], \n    shop=>!!shop.collections\n)","import React from \"react\"; \n\nimport Spinner from \"../spinner/spinner.component\";\n\nconst WithSpinner=WrappedComponent =>({isLoading, ...otherProps})=>{\n\nreturn isLoading ?\n (<Spinner/>):(\n    <WrappedComponent {...otherProps}/>\n  );\n};\n\nexport default WithSpinner; ","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n      button {\n        // opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n    }\n    button {\n      opacity: unset;\n    }\n  }\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cart.action\"\nimport {PriceContainer,\n     NameContainer,\n      CollectionFooterContainer, \n      BackgroundImage, \n      AddButton, \n      CollectionItemContainer} \n      from \"./collection-item.styles\"\n//functional component\nconst CollectionItem= ({ item,addItem })=>{\n\n    //distructure these properties from the item instead of props  \n    const {name, price, imageUrl}= item;\n\n    return (\n<CollectionItemContainer>\n\n<BackgroundImage className='image' imageUrl={imageUrl} />\n        <CollectionFooterContainer>\n           <NameContainer>{name}</NameContainer>\n            <PriceContainer>{price}</PriceContainer>\n\n        </CollectionFooterContainer>  \n\n        <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n</CollectionItemContainer>\n\n    )}\nconst mapDispatchToProps=dispatch =>({\n\n    addItem: item =>dispatch(addItem(item))\n})\n\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}
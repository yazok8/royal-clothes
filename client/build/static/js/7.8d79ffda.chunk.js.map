{"version":3,"sources":["pages/sign-up-and-sign-in/sign-up-and-sign-in.styles.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-up-and-sign-in/sign-up-and-sign-in.component.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx"],"names":["SigninAndSignupContainer","styled","div","SignInContainer","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","handleChange","target","value","name","onSubmit","type","label","required","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpStart","displayName","confirmPassword","setUserCredentials","alert","className","onChange","SignInAndSignUpPage","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","subColor","shrinkLabelStyles","css","GroupContainer","FormInputContainer","input","FormInputLabel","FormInput","otherProps"],"mappings":"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","file":"static/js/7.8d79ffda.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const SigninAndSignupContainer = styled.div`\n  width: 1150px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    width: 300px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    width: 300px;\n  }\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    margin-bottom: 40px;\n  }\n`;\n","import React, {useState} from \"react\"; \nimport {connect} from \"react-redux\"\nimport FormInput from \"../form-input/form-input.component\"\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/user.action\";\nimport {\n    SignInContainer,\n    SignInTitle,\n    ButtonsBarContainer\n  } from './sign-in.styles';\n\nconst SignIn=({emailSignInStart, googleSignInStart})=>{\n\n    const [userCredentials, setCredentials]= useState({email: \"\", password:\"\"})\n\n    const {email, password}=userCredentials;\n  const  handleSubmit = async event=>{\n        event.preventDefault();\n\n  \n\n        emailSignInStart(email, password)\n\n    };\n\n   const handleChange = event=>{\n\n        const {value, name} = event.target;\n\n        //this will dynamically set our state, so it will render whatever the value that comes in. if the name is password it will render the password.\n        setCredentials({...userCredentials,[name]:value })\n    }\n\n\n        return (<SignInContainer>\n\n            <SignInTitle>I already have an account</SignInTitle>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput name=\"email\" type=\"email\" value={email} handleChange={handleChange} label=\"email\" required/>\n                <FormInput name=\"password\" type=\"password\" value={password} handleChange={handleChange} label=\"password\" required/>\n                <ButtonsBarContainer>\n                <CustomButton  type=\"submit\">\n                    Sign In\n                    </CustomButton>\n                <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n                      Sign in with Google\n                </CustomButton>\n            </ButtonsBarContainer>\n            </form>\n\n        </SignInContainer>\n    )\n    \n}\n\nconst mapDispatchToProps= dispatch=>({\n    googleSignInStart: () => dispatch(googleSignInStart()), \n    emailSignInStart:(email, password)=>dispatch(emailSignInStart({email, password}))\n});\n\n\n\nexport default connect(null, mapDispatchToProps)(SignIn); \n","import styled from 'styled-components';\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    width: 300px;\n    margin-left: 10px;\n  }\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n`;\n","import React, {useState} from \"react\"; \n\nimport {connect} from \"react-redux\";\n \nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from\"../custom-button/custom-button.component\"; \nimport {signUpStart} from \"../../redux/user/user.action\"\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp =({signUpStart})=>{\n\n    const [userCredentials, setUserCredentials]= useState({\n        displayName:\"\",\n        email:\"\",\n        password:\"\",\n        confirmPassword:\"\"\n    });\n\n\n    const {displayName, email, password, confirmPassword}= userCredentials\n   const handleSubmit= async event =>{\n\n        event.preventDefault();\n\n     \n\n        if(password!== confirmPassword){\n        alert(\"passwords don't match\");\n\n        return; \n        }\n\n        signUpStart({displayName, email, password});\n    }; \n\n   const handleChange = event=>{\n\n        const{name, value }=event.target\n\n    setUserCredentials({...userCredentials,[name]: value});\n\n    }\n\n       \n\n    return(\n        \n    <SignUpContainer>\n        <SignUpTitle>I do not have an account</SignUpTitle>\n        <span>Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n            <FormInput \n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={handleChange}\n            label=\"Display Name\" \n            required\n            />\n                 <FormInput \n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            label=\"Email\" \n            required\n            />\n                 <FormInput \n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            label=\"Password\" \n            required\n            />\n                 <FormInput \n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={handleChange}\n            label=\"Confirm Password\" \n            required\n            />\n          \n        <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n\n    </SignUpContainer>\n        )\n}\n\nconst mapDispatchToProps = dispatch=>({\n    signUpStart:userCredentials => dispatch(signUpStart(userCredentials))\n})\n\n\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from \"react\";\nimport {SigninAndSignupContainer} from \"./sign-up-and-sign-in.styles\";\nimport SignIn from \"../../components/sign-in/sign-in.component\"\nimport SignUp from \"../../components/sign-up/sign-up.component\";\n\nconst SignInAndSignUpPage=()=>(\n\n    <SigninAndSignupContainer>\n        <SignIn />\n        <SignUp/>\n    </SigninAndSignupContainer>\n)\n\nexport default SignInAndSignUpPage;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled, { css } from 'styled-components';\n\nconst subColor = 'grey';\nconst mainColor = 'black';\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label {\n    ${shrinkLabelStyles}\n  }\n`;\n\nexport const FormInputLabel = styled.label`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;","import React from \"react\"; \nimport {\n    GroupContainer,\n    FormInputContainer,\n    FormInputLabel\n  } from './form-input.styles';\n\n\n//functional component \nconst FormInput = ({handleChange, label, ...otherProps})=>(\n    <GroupContainer>\n        <FormInputContainer onChange={handleChange} {...otherProps}></FormInputContainer>\n        { label ?\n            (<FormInputLabel className={`${otherProps.value.length ? \"shrink\" : \"\"\n             } form-input-label`}>\n\n           {label}\n\n            </FormInputLabel>)\n            :\n            null\n        }\n\n    </GroupContainer>\n)\nexport default FormInput;"],"sourceRoot":""}